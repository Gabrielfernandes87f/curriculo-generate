version: '3.8'

services:
    laravel_app:
        build:
            context: ./
            dockerfile: ./docker/nginx/Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: laravel_app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - nginx

    # nginx
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - ${NGINX_PORT:-8180}:80
        volumes:
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks:
            - sail

    mysql:
        image: mysql:8
        restart: unless-stopped
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s

     # queue
  #  queue:
  #      build:
  #          args:
  #              user: Gabriel
  #              uid: 1000
  #          context: ./
  #          dockerfile: Dockerfile
  #      restart: unless-stopped
  #      command: "php artisan queue:work"
  #      volumes:
  #          - ./:/var/www
  #      depends_on:
  #          - redis
  #      networks:
  #          - sail

    # redis
 #   redis:
 #       image: redis:latest
 #       ports:
 #           - '${FORWARD_REDIS_PORT:-6379}:6379'
 #       volumes:
 #           - 'sail-redis:/data'
 #       networks:
 #           - sail
 #       healthcheck:
 #           test:
 #               - CMD
 #               - redis-cli
 #               - ping
 #           retries: 3
 #           timeout: 5s

networks:
    sail:
        driver: bridge

volumes:
    sail-nginx:
        driver: local
    sail-mysql:
        driver: local

  #  sail-queue:
  #     driver: local
  #  sail-redis:
  #   driver: local
